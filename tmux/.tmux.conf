# Get colours palette
#for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolour${i}\n"
#done
# "#FFFFFF"

# Set prefered shell by default
set-option -g default-shell /bin/zsh

#setenv PATH $PATH

# make tmux display things in 256 colors
## set the default TERM
set -g default-terminal linux

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal tmux-256color'

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
bind C-s send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -c "#{pane_current_path}" -h
bind _ split-window -c "#{pane_current_path}" -v
bind + new-window

# Make the current window the first window
bind T swap-window -t 1

bind -n M-1 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 1' 'send M-1'
bind -n M-2 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 2' 'send M-2'
bind -n M-3 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 3' 'send M-3'
bind -n M-4 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 4' 'send M-4'
bind -n M-5 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 5' 'send M-5'
bind -n M-6 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 6' 'send M-6'
bind -n M-7 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 7' 'send M-7'
bind -n M-8 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 8' 'send M-8'
bind -n M-9 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 9' 'send M-9'
bind -n M-0 if 'test `tmux list-panes -F "#W"` != "irssi"' 'select-window -t 0' 'send M-0'


# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# and use C-h and C-l to cycle thru panes
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

## resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Use Alt-vim keys without prefix key to resize panes
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5

# ---------------------
# Copy & Paste
# ---------------------
setw -g mode-keys vi
unbind p

bind Escape copy-mode
bind C-s copy-mode
bind p paste-buffer
#bind C-p previous-window
bind C-n next-window
bind -T copy-mode-vi C-s send -X begin-selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

bind -T copy-mode-vi s send -X copy-pipe "tmux split-window sr google `tmux show-buffer`"
bind -T copy-mode-vi e send -X copy-pipe "tmux split-window vim `tmux show-buffer`"
bind -T copy-mode-vi m send -X copy-pipe "tmux split-window 'tmux show-buffer | vim -'"
bind -T copy-mode-vi b send -X copy-pipe "tmux split-window w3m `tmux show-buffer`"
bind -T copy-mode-vi C-j send -X copy-pipe "tmux split-window -l 3 'myougiden `tmux show-buffer` ; read -s'"

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
set-option -g pane-border-fg colour7 #base02
set-option -g pane-active-border-fg colour8 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange
set-option -g message-attr bright

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
setw -g automatic-rename on
set -g window-status-activity-style fg=brightblue,bg=black,blink

# set color for status bar
set-option -g status-fg white #yellow
set-option -g status-bg default
set-option -g status-attr bright #dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default #colour 8
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
set -g status-left-length 85
set -g status-left "#[fg=green]#h#[fg=brightred]@#[fg=brightblue]#(host `hostname` | head -n 1 | cut -d \" \" -f 4)"

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #[fg=brightred]| #[fg=yellow]%Y %b %d #[fg=brightred]| #[fg=green]%R #[fg=red,blink]#(~/.tmux/tmux-notifications/bin/tmux-notification-count)"

# binding to show all pending messages in tmux's pager
bind-key * run-shell 'cat ~/.tmux-notify | uniq -f2 -c '\; run-shell 'tmux-clear-notifications' \; refresh-client -S

bind-key c send-keys -R \; clear-history

set-window-option -g xterm-keys on

#Custom regexps for copycat
set -g @copycat_search_C-c '(C|c)hange[[:space:]][[:digit:]]+'
set -g @copycat_search_C-m 'Compiling '

set -g mouse on
set -g @scroll-down-exit-copy-mode "off"
unbind -T copy-mode-vi MouseDragEnd1Pane

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'jbnicolai/tmux-fpp'
#=> Using earlier version via git clone -b tmux-23 https://github.com/tmux-plugins/tmux-copycat ~/.tmux/plugins/tmux-copycat
#run-shell ~/.tmux/plugins/tmux-copycat/copycat.tmux
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
run '~/.tmux/tpm/tpm'

set -as terminal-overrides ',*:indn@'
