# Get colours palette
#for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolour${i}\n"
#done
# "#FFFFFF"

# Set prefered shell by default
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh

# make tmux display things in 256 colors
## set the default TERM
set -g default-terminal tmux-256color

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
set-environment -g PATH "$HOME/usr/bin:/usr/local/bin:$PATH"

# set scrollback history to 10000 (10k)
set -g history-limit 10000

set -g history-file ~/.tmux_history

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# shorten command delay
set -sg escape-time 0

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -c "#{pane_current_path}" -h
bind _ split-window -c "#{pane_current_path}" -v
bind + new-window -c "#{pane_current_path}"
unbind %
bind % new-window -c "#{pane_current_path}" \; split-window -c "#{pane_current_path}" -h \; select-pane -L
bind-key > command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key < command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Make the current window the first window
bind T swap-window -t 1

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

## resize panes using PREFIX H, J, K, L
bind H resize-pane -L 1
bind J resize-pane -D 1
bind K resize-pane -U 1
bind L resize-pane -R 1

# Use Alt-vim keys without prefix key to resize panes
bind -n M-H resize-pane -L 1
bind -n M-J resize-pane -D 1
bind -n M-K resize-pane -U 1
bind -n M-L resize-pane -R 1

#bind C-p previous-window
bind C-n next-window

# ---------------------
# Copy & Paste
# ---------------------
if-shell 'uname | grep -q Darwin' \
'setenv -g PASTER "pbpaste" ; setenv -g COPIER "pbcopy"' \
'setenv -g PASTER "xclip -selection clipboard -o" ; setenv -g COPIER "xclip -selection clipboard"'

setw -g mode-keys vi
unbind p

bind - copy-mode \; send -X page-up
bind C-q copy-mode
bind p run-shell '$PASTER | tmux load-buffer - && tmux paste-buffer'
bind -T copy-mode-vi p run-shell '$PASTER | tmux load-buffer - && tmux paste-buffer'
bind -T copy-mode-vi ] run-shell '$PASTER | tmux load-buffer - && tmux paste-buffer'
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel '$COPIER `tmux show-buffer`'
bind -T root MouseDown2Pane run -b '$PASTER | tmux load-buffer - && tmux paste-buffer'

#unbind -T copy-mode-vi Enter
#bind -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace $COPIER"
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi + send -X page-down
bind -T copy-mode-vi - send -X page-up
bind -T copy-mode-vi Escape send -X cancel

bind -T copy-mode-vi g send -X copy-pipe "tmux split-window -c #{pane_current_path} 'ag `tmux show-buffer` ; read -s'"
bind -T copy-mode-vi s send -X copy-pipe "tmux split-window sr google `tmux show-buffer`"
bind -T copy-mode-vi e send -X copy-pipe "tmux split-window -c #{pane_current_path} nvr --servername /tmp/nvimsocket.#S.#I -s `tmux show-buffer`"
bind -T copy-mode-vi E send -X copy-pipe "tmux split-window -c #{pane_current_path} nvim `tmux show-buffer`"
bind -T copy-mode-vi m send -X copy-pipe "tmux split-window tmux show-buffer | vim -"
bind -T copy-mode-vi b send -X copy-pipe "tmux split-window open `tmux show-buffer`"
bind -T copy-mode-vi C-j send -X copy-pipe "tmux split-window -l 3 'myougiden `tmux show-buffer`; tmux copy-mode; tmux send-keys gg; read -s'"

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour7

# colorize messages in the command line
set -g message-style fg=brightred,bg=black,bright

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity off
set -g visual-activity on
setw -g automatic-rename off
set -g window-status-activity-style fg=brightblue,bg=black,blink

# set color for status bar
set -g status-style fg=white,bg=default,bright

# set window list colors - red for active and cyan for inactive
set -g window-status-style fg=brightblue,bg=default,dim
set -g window-status-current-style fg=brightred,bg=default,bright

# show host name and IP address on left side of status bar
set -g status-left-length 85
set -g status-left "#[fg=green]#h#[fg=brightred]@#[fg=blue]#{pane_tty}#{prefix_highlight}"

# Allows remote session to take over keybinding
color_dark="black"
color_light="white"
color_status_text="colour245"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour8"
color_window_off_status_current_bg="colour254"

bind -T root M-Escape \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  set-option -g status-position top \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off M-Escape \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  set-option -g status-position bottom \;\
  refresh-client -S

wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')"

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #[fg=brightred]| #{sysstat_cpu}#[fg=colour8]###[default]#{sysstat_mem}#{battery_graph}#[fg=brightred]@#{online_status} #[fg=brightred]|#{tasks_status}#[fg=brightred]| #[fg=yellow]%Y %b %d #[fg=brightred]| #[fg=green]%R #[default]$wg_is_keys_off#[fg=red,blink]#(~/.tmux/tmux-notifications/bin/tmux-notification-count)"

# binding to show all pending messages in tmux's pager
bind-key * run-shell 'cat ~/.tmux-notify | uniq -f2 -c '\; run-shell 'tmux-clear-notifications' \; refresh-client -S

bind-key c send-keys -R \; clear-history

set-window-option -g xterm-keys on
set-window-option -g visual-bell on
set-window-option -g bell-action other

#Custom regexps for copycat
set -g @copycat_search_C-m 'Compiling '
set -g @copycat_search_C-r 'CR-[0-9]+'

# Customise better-mouse
set -g mouse on

# Emulate scrolling by sending up and down keys if these commands are running in the pane
#tmux_commands_with_legacy_scroll="nano less more man git"

#bind-key -T root WheelUpPane \
#select-pane -t= \
#if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
#'send -Mt=' \
#'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
#"select-pane -t=; send -t= Up" "copy-mode -et="'
#
#bind-key -T root WheelDownPane \
#select-pane -t= \
#if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#'send -Mt=' \
#'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
#"send -t= Down" "send -Mt="'
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"

# Just 1 line per scroll
bind-key -T copy-mode-vi WheelUpPane select-pane \; send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -X scroll-down

# For vi copy mode bindings
unbind-key -T copy-mode-vi MouseDragEnd1Pane

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; send-keys -X select-word \; send-keys -X copy-pipe-no-clear '$COPIER' \; send -X stop-selection
#send-keys -X copy-pipe "xclip -in -sel primary" \; \

bind-key -n DoubleClick1Pane \
    if-shell "$is_vim" \
    'send-keys -M' \
    'select-pane ; copy-mode -M ; send-keys -X select-word ; send-keys -X copy-pipe-no-clear "$COPIER" ; send -X stop-selection'

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; send-keys -X select-line \; send-keys -X copy-pipe-no-clear "$COPIER"

bind-key -n TripleClick1Pane \
    if-shell "$is_vim" \
    'send-keys -M' \
    'select-pane ; copy-mode -M ; send-keys -X select-line ; send-keys -X copy-pipe-no-clear "$COPIER"'

# Custom highlight for copy
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=red,bold'
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'blue'

# Task manager
set -g @tasks_manager 'taskwarrior'
set -g @tasks_format_begin '#[fg=red,bg=black]'
set -g @tasks_icon_urgent '⧗'
set -g @tasks_icon_outstanding '+'

#Sysstat
set -g @sysstat_mem_view_tmpl '#[fg=#{mem.color}]#{mem.pused}'
set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color}]#{cpu.pused}'

#Tmux-yank
set -g @yank_action 'copy-pipe'

# tmux-pop
set -g @tmux-pop-color 'colour7'

# tmux-sidebar
set -g @sidebar-tree-command 'tree -C -f --dirsfirst'
set -g @sidebar-tree-pager 'less -R -'

# tmux-continuum
set -g @continuum-restore 'on'

#tmux-resurrect
set -g @resurrect-processes 'ninja-dev-sync "-v" mosh "dev-dsk-legrist-2b-beb2d6af.us-west-2.amazon.com"'

#tmux-loggin
set -g @logging-path '#{pane_current_path}'

# tmux-fingers
set -g @fingers-key Space
set -g @fingers-copy-command '$COPIER'
set -g @fingers-copy-command-uppercase 'xargs nvim'

set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'roosta/tmux-pop'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'chriszarate/tmux-tasks'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'Morantron/tmux-fingers'
#zset -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'mux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-logging'

run -b '~/.tmux/plugins/tpm/tpm'

# redraw properly
#maybe needed:
#set -g terminal-overrides ',xterm-256color:Tc'
#set -g default-terminal "tmux-256color"
#set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -as terminal-overrides ',*:indn@'
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set-option -sa terminal-overrides ',xterm-256color:RGB'
