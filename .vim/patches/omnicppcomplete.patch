diff --git a/autoload/omni/cpp/items.vim b/autoload/omni/cpp/items.vim
index fd79131..0e752b9 100644
--- a/autoload/omni/cpp/items.vim
+++ b/autoload/omni/cpp/items.vim
@@ -241,9 +241,14 @@ function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)
             " struct and use it instead
             let tagItem = s:ResolveSymbol(tmpContextStack, typeInfo.value, "v:val.kind=='t'")
             if has_key(tagItem,'typeref')
-                if matchstr(tagItem.typeref,'struct') >= 0
                 " Hack typeInfo.value
-                    let typeInfo.value = substitute(tagItem.typeref,'struct:','','')
+                let typename = substitute(tagItem.typeref, '^\w\+:', '', 'g')
+                let typename = substitute(typename,'<.*>','','')
+                if has_key(tagItem, 'namespace')
+                    let namespace = tagItem.namespace
+                    let typeInfo.value = namespace ."::". typename
+                else
+                    let typeInfo.value = typename
                 endif
             endif

@@ -392,11 +397,12 @@ endfunc
 " Gets the first symbol found in the context stack
 function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)
     let tagItem = {}
+    let szSymbol = substitute(a:szSymbol, '^::', '', 'g')
     for szCurrentContext in a:contextStack
         if szCurrentContext != '::'
-            let szTagQuery = substitute(szCurrentContext, '^::', '', 'g').'::'.a:szSymbol
+            let szTagQuery = substitute(szCurrentContext, '^::', '', 'g').'::'.szSymbol
         else
-            let szTagQuery = a:szSymbol
+            let szTagQuery = szSymbol
         endif

         let tagList = omni#common#utils#TagListNoThrow('^'.szTagQuery.'$')
